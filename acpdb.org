#+STARTUP: showeverything

* Command-line syntax

apcfit -h [inputfile [outputfile]]

The input file is a keyword-driven case-insensitive text
file. Comments are #. If the input or the output file are not present,
stdin and stdout are used. If the output file is not present, stdout
is used.

* Definitions

- Structure: the structural information about a molecule or crystal.

- Property: a quantity calculable by running a few molecular or
  crystal calculations and that is linear in the total energies. 

- Method: a method for the calculation of a property. Can be a
  "reference method" (expensive and/or from the literature), an
  approximate method (usually the target of ACP fitting), or an
  additional method (additional contributions to the energy, like a
  dispersion correction).

- Set: a group of properties, usually from an article in the
  literature and calculated with a reasonably good method.

- Traning set: the set of all properties that are used for ACP
  development. Comprises one or more sets.

- Dataset: the training set plus additional information such as atoms,
  angular momentum channels, etc. The dataset completely determines
  the ACP fitting problem.

Whenver set names are required, an asterisk stands for the current
training set. When a method name is required, an asterisk stands for
the method used in the original reference.

* Keywords

CREATE acpdb_file.s

  Creates an empty database in file acpdb_file.s.

CONNECT acpdb_file.s

  Connects to the database file acpdb_file.s.

DISCONNECT

  Disconnect the current database.

INSERT LITREF ref.s
  AUTHORS ... 
  TITLE ...
  JOURNAL ... 
  VOLUME ...
  PAGE ...
  YEAR ...
  DOI ... 
  DESCRIPTION ... 
END

  Insert a new literature reference into the database (table 1), with
  key ref.s. The key and the DOI must be unique.

INSERT LITREF BIBTEX bibfile.s

  Insert the literature references contained in bibtex file
  bibfile.s. Only entries of type article are inserted.

DELETE LITREF {key.s|key.i|*}

  Delete a literature reference using the reference key or id
  number. If *, delete all literature references.

LIST LITREF [BIBTEX]

  List the literature references in the database. If the BIBTEX
  keyword is used, write the list of literature referneces in bibtex
  format.

INSERT SET name.s
  PROPERTY_TYPE {prop.s|prop.i}
  DESCRIPTION ...
  LITREFS {ref1.s|ref1.i} {ref2.s|ref2.i} ...
END

  Insert a set with name name.s in the database. The set calculates
  property prop.s/prop.i from Property_types and has nstruct.i
  structures. One or more references from Table 1 can be given by id
  or key.

INSERT SET name.s
  PROPERTY_TYPE {prop.s|prop.i}
  DESCRIPTION ...
  LITREFS {ref1.s|ref1.i} {ref2.s|ref2.i} ...

  XYZ xyz1.s xyz2.s xyz3.s ...  
  ... or ...
  XYZ directory.s regexp.s
END

Add the set with name name.s in the same way as above. In addition,
belonging to this set, add structures corresponding to XYZ files
xyz1.s, etc. Alternatively, add all files in directory directory.s
that match the regular expression regexp.s (awk style). If regexp.s is
not given, add all xyz files.

Note: there is no facility for inserting db files because din files
are more efficient. In DB files, structures may be repeated in the
database.

INSERT SET name.s
  PROPERTY_TYPE {prop.s|prop.i}
  DESCRIPTION ...
  LITREFS {ref1.s|ref1.i} {ref2.s|ref2.i} ...

  METHOD method.s
  DIN file.s directory.s
END

Add the set with name name.s in the same way as above. In addition,
belonging to this set, add the structures indicated in the din
file. The xyz files are found in directory directory.s. Also, add the
corresponding properties and the corresponding evaluations with method
method.s.

DELETE SET {set.s|set.i}

  Delete a set (Table 3).

LIST SET

  List the known sets.

INSERT METHOD name.s
  COMP_DETAILS ...
  LITREFS {ref1.s|ref1.i} {ref2.s|ref2.i} ...
  DESCRIPTION ...
END    

  Insert a computational method with name name.s in the database. The
  method has computational details COMP_DETAILS. LITREFS: literature
  references. DESCRIPTION: a description of the method.

DELETE METHOD {method.s|method.i}

  Delete a method (Table 4).

LIST METHOD

  List the known methods.

INSERT STRUCTURE name.s
  XYZ file.s
  SET {set.s|set.i}
END

  Insert structure with key name.s from xyz file file.s. This
  structure belongs in set set.s/set.i.

DELETE STRUCTURE {struct.s|struct.i}

  Delete a structure (Table 5).

LIST STRUCTURE

  List the known structures.

INSERT PROPERTY name.s
  PROPERTY_TYPE {prop.s|prop.i}
  SET {set.s|set.i}
  NSTRUCTURES nstruct.i
  STRUCTURES {s1.s|s1.i} {s2.s|s2.i} {s3.s|s3.i} ...
  COEFFICIENTS c1.r c2.r c3.r ...
END

  Insert property with key name.s. This property belongs in set
  set.s/set.i and involves nstruct.i structures, given by ids
  s1.s/s1.i, etc. The recipe for the calculation of the property uses
  coefficients c1.r, etc.

DELETE PROPERTY {name.s|name.i}

  Delete a property (Table 6).

LIST PROPERTY

  List the known properties.

INSERT EVALUATION
  METHOD {method.s|method.i}
  PROPERTY {prop.s|prop.i}
  VALUE value.r
  UNIT unit.s
END

  Insert evaluation into the database. Corresponds to the evaluation
  of property prop.s/prop.i with method method.s/method.i. The
  evaluation yields the value value.r with units unit.s (currently,
  only kcal/mol allowed).

DELETE EVALUATION id.i

  Delete an evaluation by ID (Table 7).

LIST EVALUATION

  List the known evaluations.

INSERT TERM
  METHOD {method.s|method.i}
  PROPERTY {prop.s|prop.i}
  ATOM z.i
  L l.i
  EXPONENT exp.r
  VALUE value.r
  UNIT unit.s
  MAXCOEF maxcoef.r
END

  Insert term into the database. Corresponds to the ACP term
  calculated with method method.s/method.i on property
  prop.s/prop.i for atom with atomic number z.i, angular momentum
  channel with l = l.i, and exponent exp.r. The value is value.r and
  unit is unit.s (currently, only kcal/mol allowed). If available, the
  maximum coefficient for this term can also be given (maxcoef.r).

DELETE TERM id.i

  Delete a term by ID (Table 8).

LIST TERM

  List the known terms.

* Database schema

** Table 1: literature references (Literature_refs)

- id          INTEGER PRIMARY KEY NOT NULL
- key         TEXT UNIQUE NOT NULL
- authors     TEXT
- title       TEXT
- journal     TEXT
- volume      TEXT
- page        TEXT
- year        TEXT
- doi         TEXT UNIQUE
- description TEXT

** Table 2: property types (Property_types)

- id          INTEGER PRIMARY KEY NOT NULL
- key         TEXT UNIQUE NOT NULL
- description TEXT

** Table 3: sets

- id            INTEGER PRIMARY KEY NOT NULL,
- key           TEST UNIQUE NOT NULL,
- property_type INTEGER NOT NULL,   ## foreign key: table 2 (Property_types)
- description   TEXT
- litrefs       TEXT, ## foreign key: table 1 (Literature_refs)

** Table 4: methods

- id            INTEGER PRIMARY KEY NOT NULL,
- key           TEXT UNIQUE NOT NULL,
- comp_details  TEXT,
- litrefs       TEXT, ## foreign key: table 1 (Literature_refs)
- description   TEXT, 

** Table 5: structures

- id            INTEGER PRIMARY KEY NOT NULL,
- key           TEXT UNIQUE NOT NULL,
- setid         INTEGER NOT NULL, ## foreign key: table 3 (Sets)
- ismolecule    INTEGER NOT NULL,
- charge        INTEGER,
- multiplicity  INTEGER,
- nat           INTEGER NOT NULL,
- cell          BLOB,
- zatoms        BLOB NOT NULL,
- coordinates   BLOB NOT NULL,

** Table 6: properties

- id            INTEGER PRIMARY KEY NOT NULL,
- key           TEXT UNIQUE NOT NULL,
- property_type INTEGER NOT NULL, ## foreign key: table 2 (Property_types)
- setid         INTEGER NOT NULL, ## foreign key: table 3 (Sets)
- nstructures   INTEGER NOT NULL,
- structures    BLOB NOT NULL, ## references table 5 (Structures)
- coefficients  BLOB NOT NULL,

** Table 7: evaluations

- id            INTEGER PRIMARY KEY NOT NULL,
- methodid      INTEGER NOT NULL, ## foreign key: table 4 (Methods)
- propid        INTEGER NOT NULL, ## foreign key: table 6 (Properties)
- value         REAL NOT NULL,
- unit          TEXT,

** Table 8: terms

- id            INTEGER PRIMARY KEY NOT NULL,
- methodid      INTEGER NOT NULL, ## foreign key: table 4 (Methods)
- propid        INTEGER NOT NULL, ## foreign key: table 6 (Properties)
- atom          INTEGER NOT NULL,
- l             INTEGER NOT NULL,
- exponent      REAL NOT NULL,
- value         REAL NOT NULL,
- unit          TEXT CHECK (unit IN ("KCAL/MOL")),
- maxcoef       REAL,

